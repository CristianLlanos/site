{
  "date": "2021-04-23T00:36:17.739Z",
  "image": "/img/reliese-laravel.png",
  "title": "CÃ³mo generar modelos de Laravel desde una base de datos existente",
  "description": "Exploremos un mecanismo para generar modelos de Laravel desde nuestra base de datos existente. SÃºper Ãºtil al migrar proyectos existentes hacia Laravel.",
  "body": "## InstalaciÃ³n\n\nEn un proyecto existente de Laravel agreguemos el paquete como una dependencia solo para nuestro entorno de desarrollo\n\n```bash\ncomposer require reliese/laravel --dev\n```\n\nAhora hay que publicar el archivo de configuraciones\n\n```bash\nphp artisan vendor:publish --tag=reliese-models\n```\n\n## Uso\n\nÂ¡Ahora sÃ­!\n\nEspera un momento, primero lo primero ðŸ˜œ: Hay que [configurar nuestra base de datos](https://laravel.com/docs/8.x/database#configuration).\n\nAhora sÃ­ ðŸŽ‰\n\n```bash\nphp artisan code:models\n```\n\n## Ya tengo mis modelos\n\n```php\n<?php\n\n/**\n * Created by Reliese Model.\n */\n\nnamespace App\\Models;\n\nuse Carbon\\Carbon;\nuse Illuminate\\Database\\Eloquent\\Model;\n\n/**\n * Class User\n * \n * @property int $id\n * @property string $name\n * @property string $email\n * @property Carbon|null $email_verified_at\n * @property string $password\n * @property string|null $remember_token\n * @property Carbon|null $created_at\n * @property Carbon|null $updated_at\n *\n * @package App\\Models\n */\nclass User extends Model\n{\n\tprotected $table = 'users';\n\n\tprotected $dates = [\n\t\t'email_verified_at'\n\t];\n\n\tprotected $hidden = [\n\t\t'password',\n\t\t'remember_token'\n\t];\n\n\tprotected $fillable = [\n\t\t'name',\n\t\t'email',\n\t\t'email_verified_at',\n\t\t'password',\n\t\t'remember_token'\n\t];\n}\n```\n\nIncluyen\n\n* Los property type hints que nos ayudan con el autocompletado\n* El nombre de la tabla (`table`)\n* La fechas que serÃ¡n convertidas a instancias de Carbon (`dates`)\n* Los campos protegidos (`hidden`) que no se mostrarÃ¡n al convertir el model en array\n* Los campos asignables (`fillable`)\n\n```php\n$user = new \\App\\Models\\User();\n\n$user->created_at->diffForHumans();\n```\n\n## Â¿Y si agrego nuevas tablas?\n\n```bash\nphp artisan make:migration create_posts_table\n```\n\nY agrego una relaciÃ³n\n\n```php\nSchema::create('posts', function (Blueprint $table) {\n\t\t$table->id();\n    $table->foreignIdFor(\\App\\Models\\User::class)\n        ->constrained()\n        ->onDelete('cascade');\n    $table->string('title');\n    $table->text('body');\n    $table->boolean('visible');\n    $table->dateTime('publication_date');\n    $table->softDeletes(); // Estamos habilitado los soft deletes ðŸ‘€\n    $table->timestamps();\n});\n```\n\nCreemos la tabla\n\n```bash\nphp artisan migrate\n```\n\nVolvamos a generar nuestros modelos\n\n```bash\nphp artisan code:models\n```\n\nVemos el modelo generado\n\n```php\n<?php\n\n/**\n * Created by Reliese Model.\n */\n\nnamespace App\\Models;\n\nuse Carbon\\Carbon;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\n\n/**\n * Class Post\n * \n * @property int $id\n * @property int $user_id\n * @property string $title\n * @property string $body\n * @property bool $visible\n * @property Carbon $publication_date\n * @property string|null $deleted_at\n * @property Carbon|null $created_at\n * @property Carbon|null $updated_at\n * \n * @property User $user\n *\n * @package App\\Models\n */\nclass Post extends Model\n{\n\tuse SoftDeletes;\n\tprotected $table = 'posts';\n\n\tprotected $casts = [\n\t\t'user_id' => 'int',\n\t\t'visible' => 'bool'\n\t];\n\n\tprotected $dates = [\n\t\t'publication_date'\n\t];\n\n\tprotected $fillable = [\n\t\t'user_id',\n\t\t'title',\n\t\t'body',\n\t\t'visible',\n\t\t'publication_date'\n\t];\n\n\tpublic function user()\n\t{\n\t\treturn $this->belongsTo(User::class);\n\t}\n}\n```\n\nSe agregÃ³ el Â¡trait de `SoftDeletes`! a la table posts ðŸ¥³\n\nY podemos ver que tenemos Â¡la lista de `castings`!\n\n* bool\n* int\n\nEl modelo User tambiÃ©n fue actualizado con su relaciÃ³n `hasMany` y un nuevo property type hint que nos ayudarÃ¡ con el autocompletado para la relaciÃ³n con los `posts`\n\n```php\n<?php\n\n/**\n * Created by Reliese Model.\n */\n\nnamespace App\\Models;\n\nuse Carbon\\Carbon;\nuse Illuminate\\Database\\Eloquent\\Collection;\nuse Illuminate\\Database\\Eloquent\\Model;\n\n/**\n * Class User\n * \n * @property int $id\n * @property string $name\n * @property string $email\n * @property Carbon|null $email_verified_at\n * @property string $password\n * @property string|null $remember_token\n * @property Carbon|null $created_at\n * @property Carbon|null $updated_at\n * \n * @property Collection|Post[] $posts\n *\n * @package App\\Models\n */\nclass User extends Model\n{\n\tprotected $table = 'users';\n\n\tprotected $dates = [\n\t\t'email_verified_at'\n\t];\n\n\tprotected $hidden = [\n\t\t'password',\n\t\t'remember_token'\n\t];\n\n\tprotected $fillable = [\n\t\t'name',\n\t\t'email',\n\t\t'email_verified_at',\n\t\t'password',\n\t\t'remember_token'\n\t];\n\n\tpublic function posts()\n\t{\n\t\treturn $this->hasMany(Post::class);\n\t}\n}\n```\n\nAhora el User tiene la relaciÃ³n con los posts Â¡y gracias los type hints tenemos autocompletado!\n\n```php\n$user = new User();\n        \nforeach ($user->posts as $post) {\n\t\t// El IDE nos autocompletarÃ¡ despuÃ©s de la flecha\n    $post->\n}\n```\n\n## Â¿Y si quiero agregar mÃ©todos y cambiar algo en mis modelos?\n\nPara esto podemos habilitar los `base_models` en el archivo de configuraciÃ³n ðŸš€"
}